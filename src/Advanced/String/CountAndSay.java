package Advanced.String;
//Count and say
//The count-and-say sequence is a sequence of digit strings defined by the following recursive formula:
//countAndSay(1) = "1"
//For n > 1, countAndSay(n) is generated by describing countAndSay(n-1) in terms of the frequency and value of consecutive identical digits.
//For example://"1" is read as "one 1" or "11".
//"11" is read as "two 1s" or "21".
//"21" is read as "one 2, then one 1" or "1211".
//"1211" is read as "one 1, one 2, then two 1s" or "111221".
//"111221" is read as "three 1s, two 2s, then one 1" or "312211".
//Given a positive integer n, return the nth term of the count-and-say sequence.
public class CountAndSay {
    public String countAndSay(int n) {
        if(n==1) return "1";

        String prev = countAndSay(n-1);
        String ans = "";
        int count = 1;
        int size = prev.length();
        for(int i = 1 ;i<size;i++){
            if(prev.charAt(i) == prev.charAt(i-1)) count++;
            else{
                ans += (char)('0'+count);
                ans += prev.charAt(i-1);
                count = 1;
            }
        }
        ans += (char)('0'+count);
        ans += prev.charAt(size-1);
        return  ans;
    }
    public static void main(String[] args) {
        int n = 4;
        CountAndSay sol = new CountAndSay();
        String ans = sol.countAndSay(n);
        System.out.println("The nth term of the count-and-say sequence is: " + ans);
    }
    }
